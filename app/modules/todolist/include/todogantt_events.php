<?php

/**
 * 	Dear developer!
 *	Never modify events.php file, it is autogenerated.
 *  Modify PHP/EventTemplates/events.txt instead.
 *
 */

 class eventclass_todogantt  extends eventsBase
{
	function __construct()
	{
	// fill list of events
		$this->events["ProcessValuesView"]=true;


		$this->events["BeforeShowView"]=true;

		$this->events["BeforeShowList"]=true;


		$this->events["BeforeProcessList"]=true;


	}

//	handlers

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// Process record values
function ProcessValuesView(&$values, $pageObject)
{

		include_once("todolist_custom.php");
$values["cardname"] = prepareCard($values);
if(!$values["assign"])
	$values["assign"] = "";
;
} // function ProcessValuesView

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// Before display
function BeforeShowView(&$xt, &$templatefile, &$values, $pageObject)
{

		$xt->assign("header","");
;
} // function BeforeShowView

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// Before display
function BeforeShowList(&$xt, &$templatefile, $pageObject)
{

		global $cUserNameField;
$pageObject->AddJSFile("include/anychart-core.min.js");
$pageObject->AddJSFile("include/anychart-gantt.min.js","include/anychart-core.min.js");
$pageObject->AddJSFile("include/anychart-exports.min.js","include/anychart-gantt.min.js");
//if(postvalue("date"))
//	$pageObject->setProxyValue("startdate",postvalue("date"));
//else
	$pageObject->setProxyValue("startdate",date("Y-m-d"));
$_SESSION["cardwhere"] = "";
if(postvalue("qs")){
	$_SESSION["cardwhere"] = "(".addFieldWrappers("cardname")." like '%".postvalue("qs")."%' or ".addFieldWrappers("name")." like '%".postvalue("qs")."%' or ".addFieldWrappers("$cUserNameField")." like '%".postvalue("qs")."%') and ";
}
if(postvalue("q")){
	$dc = $pageObject->getSubsetDataCommand();
	$dataSource = $pageObject->getDataSource();
	$preparedSQL = $dataSource->prepareSQL( $dc );
	$_SESSION["cardwhere"] = $preparedSQL["where"]." and ";
}
if(postvalue("f")){
	$dc = new DsCommand;
	$dc->filter = $pageObject->searchClauseObj->getFilterCondition( $pageObject->pSet );
	$prepSQL = $pageObject->getDataSource()->prepareSQL( $dc );
	$_SESSION["cardwhere"] = "";
	if($prepSQL["where"])
		$_SESSION["cardwhere"] = $prepSQL["where"]." and ";
}

if(postvalue("a") == "showall"){
	$_SESSION["cardwhere"] = "";
}



;
} // function BeforeShowList

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

				// List page: Before process
function BeforeProcessList($pageObject)
{

		
if(postvalue("a") == "getdata"){
	global $cman, $cLoginTable, $cUserNameField, $cPasswordField, $loginKeyFields;
	DB::SetConnection(DB::ConnectionByTable($cLoginTable));
	$userRs = DB::Select( $cLoginTable, "" );
	DB::SetConnection(DB::DefaultConnection());
	$userData = array();
	while( $data = $userRs->fetchAssoc() ) {
		 $userData[ $data["id"] ] = $data;
	}
$search = array ("'<script[^>]*?>.*?</script>'si",  
                 "'<[\/\!]*?[^<>]*?>'si",           
                 "'([\r\n])[\s]+'",                 
                 "'&(quot|#34);'i",                 
                 "'&(amp|#38);'i",
                 "'&(lt|#60);'i",
                 "'&(gt|#62);'i",
                 "'&(nbsp|#160);'i",
                 "'&(iexcl|#161);'i",
                 "'&(cent|#162);'i",
                 "'&(pound|#163);'i",
                 "'&(copy|#169);'i");                    
 
$replace = array ("",
                  "",
                  "\\1",
                  "\"",
                  "&",
                  "<",
                  ">",
                  " ",
                  chr(161),
                  chr(162),
                  chr(163),
                  chr(169));
//	if(postvalue("date"))	
//		$datebegin = postvalue("date");
//	else

	//$sql = DB::PrepareSQL("select * from ".$cLoginTable." where ".$cUserNameField."=':1'",Security::getUserName());
	//$rs = DB::Query($sql);
	$data = Security::currentUserData();
	$adddays = $data["daystoadd"]; 
	if(!$adddays)
		$adddays = 0;
	$datebegin = date("Y-m-01");

	$dateend = strtotime(date("Y-m-01",strtotime($datebegin)+100*24*60*60));
	//if(Security::getUserName()=="admin")
		$brs = DB::Query("select * from ".addTableWrappers("todoboards")." order by ".addFieldWrappers("boardname"));
	/*else{
		$sql = DB::PrepareSQL("select * from ".addFieldWrappers("todoboards")." where ".addFieldWrappers("userid")."=':1' order by ".addFieldWrappers("boardname")."",Security::getUserName());
		$brs = DB::Query($sql);
	}*/
	$res = array();
	$b=1;

	$uname = $data[$cUserNameField];
	$uid = $data[$loginKeyFields[0]];

	while($bdata = $brs->fetchAssoc()){
		$boardOwner = $bdata["userid"];
		
		if(Security::getUserName()!="admin"){
			$cnt1=DBLookup("select count(".addFieldWrappers("id").") from ".addTableWrappers("todocards")." where ".addFieldWrappers("assign")."=".$uid." and ".addFieldWrappers("boardid")."=".$bdata["id"]);
			$cnt2=DBLookup("select count(".addFieldWrappers("id").") from ".addTableWrappers("todocards")." where ".addFieldWrappers("ownerid")."='".$uname."' and ".addFieldWrappers("boardid")."=".$bdata["id"]);
			if($boardOwner == $uname || $boardOwner != $uname && ($cnt1>0 || $cnt2>0))
				$a=1;
			else
				continue;
		}

		$boards = array();
		$boards["bid"] = $bdata["id"];
		$boards["num"] = $b;
		$boards["name"] = $bdata["boardname"];
		$boards["actualStart"] = "";
		$boards["actualEnd"] = "";
		$lrs = DB::Query("select * from ".addFieldWrappers("todolists")." where ".addFieldWrappers("boardid")."=".$bdata["id"]." order by ".addFieldWrappers("boardid"));
		$isList = false;
		$lists = array();
		$l=1;
		while($ldata = $lrs->fetchAssoc()){
			if(Security::getUserName()!="admin"){
				$cnt1=DBLookup("select count(".addFieldWrappers("id").") from ".addTableWrappers("todocards")." where ".addFieldWrappers("assign")."=".$uid." and ".addFieldWrappers("listid")."=".$ldata["id"]);
				$cnt2=DBLookup("select count(".addFieldWrappers("id").") from ".addTableWrappers("todocards")." where ".addFieldWrappers("ownerid")."='".$uname."' and ".addFieldWrappers("listid")."=".$ldata["id"]);
				if($boardOwner == $uname || $boardOwner != $uname && ($cnt1>0 || $cnt2>0))
					$a=1;
				else
					continue;
			}
			$list = array();
			$list["lid"] = $ldata["id"];
			$list["num"] = "&nbsp;&nbsp;".$b.".".$l;
			$list["name"] = $ldata["listname"];
			$list["actualStart"] = "";
			$list["actualEnd"] = "";
			$isList = true;
			$crs = DB::Query("select c.*, ".addFieldWrappers("color").", ".addFieldWrappers("name").", ".addFieldWrappers($cUserNameField)." from ".addFieldWrappers("todocards")." c left join ".addFieldWrappers("todocategories")." t on t.".addFieldWrappers("id")."=c.".addFieldWrappers("categoryid")." left join ".addTableWrappers($cLoginTable)." u on u.".addFieldWrappers("id")."=c.".addFieldWrappers("assign")." where ".$_SESSION["cardwhere"]."".addFieldWrappers("listid")."=".$ldata["id"]." order by c.".addFieldWrappers("id"));
			$isCard = false;
			$cards = array();
			$c=1;
			while($cdata = $crs->fetchAssoc()){

			if(Security::getUserName()!="admin"){
				$cnt1=DBLookup("select count(".addFieldWrappers("id").") from ".addTableWrappers("todocards")." where ".addFieldWrappers("assign")."=".$uid." and ".addFieldWrappers("id")."=".$cdata["id"]);
				$cnt2=DBLookup("select count(".addFieldWrappers("id").") from ".addTableWrappers("todocards")." where ".addFieldWrappers("ownerid")."='".$uname."' and ".addFieldWrappers("id")."=".$cdata["id"]);
				if($boardOwner == $uname || $boardOwner != $uname && ($cnt1>0 || $cnt2>0))
					$a=1;
				else
					continue;
			}

				$card = array();
				$uData = $userData[$cdata["assign"]];
				$card["cid"] = $cdata["id"];
				$card["num"] = "&nbsp;&nbsp;&nbsp;&nbsp;".$b.".".$l.".".$c;
				$card["assign"] = $uData[$cUserNameField];
				$card["category"] = "<span style='background-color:".$cdata["color"]."'>&nbsp;&nbsp;&nbsp;&nbsp;</span>&nbsp;&nbsp;".$cdata["name"];
				if(!$uData[$cUserNameField])
					$card["assign"] = "";
				$card["name"] = preg_replace($search, $replace,$cdata["cardname"]);
				if(!$cdata["startdate"])
					$card["actualStart"] = date("Y-m-d",strtotime($cdata["duedate"])-$adddays*24*60*60);
				else
					$card["actualStart"] = $cdata["startdate"];
				$card["actualEnd"] = $cdata["duedate"];
				if($dateend<strtotime($card["actualEnd"]))
					$dateend = strtotime($card["actualEnd"]);
				if($boards["actualStart"] == "" || strtotime($card["actualStart"]) < strtotime($boards["actualStart"]))
					$boards["actualStart"] = $card["actualStart"];
				if($boards["actualEnd"] == "" || strtotime($card["actualEnd"]) > strtotime($boards["actualEnd"]))
					$boards["actualEnd"] = $card["actualEnd"];
				if($list["actualStart"] == "" || strtotime($card["actualStart"]) < strtotime($list["actualStart"]))
					$list["actualStart"] = $card["actualStart"];
				if($list["actualEnd"] == "" || strtotime($card["actualEnd"]) > strtotime($list["actualEnd"]))
					$list["actualEnd"] = $card["actualEnd"];
				$card["progressValue"] = "100%";
				if(strtotime($card["actualEnd"]) >= strtotime(date("Y-m-d"))){
					$totaltime = strtotime($card["actualEnd"]) - strtotime($card["actualStart"]);
					$currenttime = strtotime(date("Y-m-d")) - strtotime($card["actualStart"]);
					$card["progressValue"] = "0%";
					if(round($currenttime*100/$totaltime)>=0)
						$card["progressValue"] = round($currenttime*100/$totaltime)."%";
				}
				if($cdata["color"])
					$card["progress"]["fill"]["color"] = $cdata["color"];

				$cards[] = $card;
				$isCard = true;
				$c++;
			}
			if($isCard){
				$list["children"] = $cards;
			}
			$lists[] = $list;
			$l++;
		}
		if($isList){
			$boards["children"] = $lists;
			$res[] = $boards;
		}
		$b++;
	}
//	$datebegin = date("Y-m-01");
//	$dateend = strtotime("+3 MONTH", strtotime($datebegin));
	$out["data"] = $res;
	$out["start"] = date("Y-m-d",strtotime($datebegin));
	$out["end"] = date("Y-m-t",$dateend);
	echo my_json_encode($out);
	exit();
}

;
} // function BeforeProcessList

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		



}
?>