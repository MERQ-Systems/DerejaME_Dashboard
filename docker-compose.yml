# run "docker-compose -p derejame_sys up -d" to run with stack name

version: '3.9'

services:
  php:
    image: mikeintosh/mikeintosh-phpdashboard-app:latest
    build:
      context: .
      dockerfile: Dockerfile
    container_name: derejame_system
    volumes:
      - ./analytics:/var/www/html/analytics
      - ./app:/var/www/html/app
      - ./assets:/var/www/html/assets
      - ./backend:/var/www/html/backend
      - ./dist:/var/www/html/dist
      #- ./docker:/var/www/html/docker
      - ./help:/var/www/html/help
      - ./map_files:/var/www/html/map_files
      - ./src:/var/www/html/src
      - ./styles:/var/www/html/styles
      - ./test:/var/www/html/test
      - ./config:/var/www/html/config
      - ./_config.yml:/var/www/html/_config.yml
      - ./compareData.html:/var/www/html/compareData.html
      - ./demo.php:/var/www/html/demo.php
      - ./guide.html:/var/www/html/guide.html
      - ./index.php:/var/www/html/index.php
      - ./main.php:/var/www/html/main.php
      - ./postgre.php:/var/www/html/postgre.php
      - ./script.js:/var/www/html/script.js
      - ./style.css:/var/www/html/style.css
      - ./test.html:/var/www/html/test.html
      - ./test.php:/var/www/html/test.php
      - ./404.php:/var/www/html/404.php
      - ./manifest.json:/var/www/html/manifest.json
      - ./pwabuilder-sw.js:/var/www/html/pwabuilder-sw.js
    #ports:
      #- "8080:80" #uncomment to expose the php services
    expose:
        - "9000"
    depends_on:
      - db
    networks:
      - derejanet

  nginx:
    image: nginx:latest
    container_name: derejanginx
    ports:
      - "8080:80"
    volumes:
      - ./config/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./analytics:/var/www/html/analytics
      - ./app:/var/www/html/app
      - ./assets:/var/www/html/assets
      - ./backend:/var/www/html/backend
      - ./dist:/var/www/html/dist
      # - ./docker:/var/www/html/docker
      - ./help:/var/www/html/help
      - ./map_files:/var/www/html/map_files
      - ./src:/var/www/html/src
      - ./styles:/var/www/html/styles
      - ./test:/var/www/html/test
      - ./config:/var/www/html/config
      - ./config/php.ini:/usr/local/etc/php/php.ini
      - ./_config.yml:/var/www/html/_config.yml
      - ./compareData.html:/var/www/html/compareData.html
      - ./demo.php:/var/www/html/demo.php
      - ./guide.html:/var/www/html/guide.html
      - ./index.php:/var/www/html/index.php
      - ./main.php:/var/www/html/main.php
      - ./postgre.php:/var/www/html/postgre.php
      - ./script.js:/var/www/html/script.js
      - ./style.css:/var/www/html/style.css
      - ./test.html:/var/www/html/test.html
      - ./test.php:/var/www/html/test.php
      - ./404.php:/var/www/html/404.php
      - ./manifest.json:/var/www/html/manifest.json
      - ./pwabuilder-sw.js:/var/www/html/pwabuilder-sw.js
    depends_on:
      - php
    networks:
      - derejanet


  metabase:
    image: metabase/metabase:latest
    container_name: derja_viz
    hostname: metabase
    volumes:
      - ./derejaviz:/dev/random:ro
    ports:
      - 4000:3000
    environment:
      MB_DB_FILE: ./derejaviz/merqdereja.db
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: merqderejadb
      MB_DB_PORT: 5432
      MB_DB_USER: merqderejadb
      MB_DB_PASS: merqderejadb
      MB_DB_HOST: postgres
      MB_ADMIN_EMAIL: dev@merqconsultancy.org
      MB_ADMIN_FIRST_NAME: MERQ
      MB_ADMIN_PASSWORD: merqderejadev0
    networks:
      - derejanet

  postgres:
    image: postgres:latest
    container_name: merq_dereja_postgres
    hostname: postgres
    environment:
      POSTGRES_DB: merqderejadb
      POSTGRES_USER: merqderejadb
      POSTGRES_PASSWORD: merqderejadb
    volumes:
      - ./src/merqderejadb:/docker-entrypoint-initdb.d/merqderejadb
    networks:
      - derejanet

  db:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_HOST: localhost
      MYSQL_DATABASE: merqderejadev
      MYSQL_ROOT_PASSWORD: merqderejadmin
      MYSQL_USER: merqderejadev
      MYSQL_PASSWORD: merqderejadev
    volumes:
      - ./src/dere_dev.sql:/docker-entrypoint-initdb.d/dere_dev.sql
      - ./mysql-init:/docker-entrypoint-initdb.d  # to mount the init script
    networks:
      - derejanet

  phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - 3307:80
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOSTS=db
      - PMA_USER=merqderejadev
      - PMA_PASSWORD=merqderejadev
    networks:
      - derejanet

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "5434:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=dev@merqconsultancy.org
      - PGADMIN_DEFAULT_PASSWORD=merqderejadev
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - derejanet

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: merqderejadev
      MONGO_INITDB_ROOT_PASSWORD: merqderejadev
    networks:
      - derejanet

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8018:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: merqderejadev
      ME_CONFIG_MONGODB_ADMINPASSWORD: merqderejadev
      ME_CONFIG_MONGODB_URL: mongodb://merqderejadev:merqderejadev@mongo:27017/
      ME_CONFIG_BASICAUTH_USERNAME: merqderejauser
      ME_CONFIG_BASICAUTH_PASSWORD: merqderejauser
      ME_CONFIG_SSL_ENABLED: 'false'
      #ME_CONFIG_SSL_CRT_PATH: /etc/ssl/certs/server.crt
      #ME_CONFIG_SSL_KEY_PATH: /etc/ssl/certs/server.key
    volumes: 
      #- ./certs:/etc/ssl/certs
      - ./mongodata/db:/data/db
    networks: 
      - derejanet

networks:
  derejanet:
    driver: bridge

volumes:
  derejaviz: 
  pgadmin-data:
  mongodata:
